apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs
  strategy: {}
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
        - image: fabcotech/dappy-node:1.9
          name: nodejs
          env:
            - name: CACHING
              value: '30'
            - name: CRON_JOBS_NAMES_MODULO
              value: '0'
            - name: DAPPY_NETWORK
              value: testnetwork
            - name: LAST_BLOCK_JOB_INTERVAL
              value: '40000'
            - name: RCHAIN_NAMES_REGISTRY_URI
              value: 1rjuqxchdg85n38x3i9syez6ingq8nbreex5ajz1tf9i53rji9iksz
            - name: RCHAIN_NETWORK
              value: testnet
            - name: REDIS_DB
              value: '1'
            - name: VALIDATOR
              value: https://node0.testnet.rchain-dev.tk,https://node1.testnet.rchain-dev.tk,https://node2.testnet.rchain-dev.tk,https://node4.testnet.rchain-dev.tk
          ports:
            - containerPort: 3001
            - containerPort: 3002
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
      restartPolicy: Always
      dnsPolicy: 'None'
      dnsConfig:
        nameservers:
          - 8.8.8.8
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy: {}
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
          ports:
            - containerPort: 6379
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: fabcotech/dappy-nginx:3.1
          env:
            - name: DAPPY_NETWORK
              value: testnetwork
            - name: CLUSTER_DOMAIN_NAME
              value: 'dappy.tech'
          name: nginx
          volumeMounts:
            - mountPath: '/etc/nginx/ssl'
              name: nginx-ssl
              readOnly: true
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 40400
            - containerPort: 40401
            - containerPort: 40403
            - containerPort: 40404
      volumes:
        - name: nginx-ssl
          secret:
            secretName: nginx-ssl
      restartPolicy: Always
      dnsPolicy: 'None'
      dnsConfig:
        nameservers:
          - 8.8.8.8
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rnode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rnode
  strategy: {}
  template:
    metadata:
      labels:
        app: rnode
    spec:
      hostNetwork: true
      containers:
        - image: fabcotech/rnode-donkey:0.4
          name: rnode
          env:
            - name: BOOTSTRAP
              value: 'rnode://ef5438d8042be159cb84caf5ad50f8192540dff1@observer-lfs.testnet.rchain.coop?protocol=46400&discovery=46404'
            - name: NETWORK
              value: 'testnet02032020'
            - name: CLUSTER_DOMAIN_NAME
              value: 'dappy.tech'
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ['rnode']
          args: [
            'run','--bootstrap','$(BOOTSTRAP)', '--network-id','$(NETWORK)', --host, '$(HOSTNAME).$(CLUSTER_DOMAIN_NAME)', '--protocol-port', '40400', '--discovery-port', '40404', '--finalization-rate', '1', '--fault-tolerance-threshold', '-1', '--synchrony-constraint-threshold', '0.99'
          ]
          ports:
            - containerPort: 40400
            - containerPort: 40401
            - containerPort: 40403
            - containerPort: 40404
          resources:
            limits:
              memory: '12Gi'
              cpu: '500m'
      restartPolicy: Always
      dnsPolicy: 'None'
      dnsConfig:
        nameservers:
          - 8.8.8.8
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs
spec:
  type: ClusterIP
  selector:
    app: nodejs
  ports:
    - port: 3001
      name: '3001'
      targetPort: 3001
    - port: 3002
      name: '3002'
      targetPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      name: 'redis'
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: LoadBalancer
  loadBalancerIP: 195.154.70.253
  selector:
    app: nginx
  ports:
    - port: 80
      name: 'http'
      targetPort: 80
    - port: 443
      name: 'https'
      targetPort: 443
    - port: 40400
      name: '40400'
      targetPort: 40400
    - port: 40401
      name: '40401'
      targetPort: 40401
    - port: 40403
      name: '40403'
      targetPort: 40403
    - port: 40404
      name: '40404'
      targetPort: 40404
---
apiVersion: v1
kind: Service
metadata:
  name: rnode
spec:
  type: ClusterIP
  selector:
    app: rnode
  ports:
    - port: 40400
      name: '40400'
      targetPort: 40400
    - port: 40401
      name: '40401'
      targetPort: 40401
    - port: 40403
      name: '40403'
      targetPort: 40403
    - port: 40404
      name: '40404'
      targetPort: 40404