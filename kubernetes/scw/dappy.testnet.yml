apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |
    .:53 {
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods verified
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . 1.1.1.1 1.1.1.2
        cache 30
        loop
        reload
        loadbalance
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dappy-jobs
spec:
  selector:
    matchLabels:
      app: dappy-jobs
  template:
    metadata:
      labels:
        app: dappy-jobs
    spec:
      containers:
        - image: paulmusso/dappy-node:3.5
          name: get-contract-logs
          env:
            - name: REDIS_URL
              value: redis://redis:6379/1
            - name: MASTER_REGISTRY_URI
              value: 1m9nenussy7udjznij1b6pr59jicg11aygmpit6fi9jji5i5633d3k
            - name: READ_ONLY
              value: https://c9e619b7-cacc-4441-b75a-363dfde1b0fa.pub.instances.scw.cloud
            - name: LOGS_INTERVAL
              value: '10000'
            - name: CONTRACTS
              value: dappynamesystem
            - name: READ_ONLY_CERTIFICATE_PATH
              value: /ssl/tls.crt
            - name: START_JOB
              value: 'true'
          resources:
            limits:
              memory: '128Mi'
              cpu: '100m'
          command:
          - sh
          - '-c'
          - node src/jobs/get-contract-logs.js
          volumeMounts:
          - name: rnode-tls 
            mountPath: '/ssl'
            readOnly: true   
      restartPolicy: Always
      volumes:
        - name: rnode-tls
          secret:
            secretName: rnode-tls      

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dappy-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dappy-node
  strategy: {}
  template:
    metadata:
      labels:
        app: dappy-node
    spec:
      containers:
        - image: paulmusso/dappy-node:3.5
          name: dappy-node
          env:
            - name: CACHING
              value: '30'
            - name: CRON_JOBS_NAMES_MODULO
              value: '0'
            - name: DAPPY_NETWORK
              value: gammanetwork
            - name: LAST_BLOCK_JOB_INTERVAL
              value: '40000'
            - name: RCHAIN_NAMES_CONTRACT_ID
              value: dappynamesystem
            - name: RCHAIN_NAMES_MASTER_REGISTRY_URI
              value: 1m9nenussy7udjznij1b6pr59jicg11aygmpit6fi9jji5i5633d3k
            - name: RCHAIN_NETWORK
              value: testbm210724
            - name: READ_ONLY
              value: https://c9e619b7-cacc-4441-b75a-363dfde1b0fa.pub.instances.scw.cloud
            - name: READ_ONLY_CERTIFICATE_PATH
              value: /ssl/tls.crt
            - name: REDIS_DB
              value: '1'
            - name: VALIDATOR
              value: https://node0.bm.testnet.rchain.coop
          ports:
            - containerPort: 3001
            - containerPort: 3002
          volumeMounts:
          - name: rnode-tls
            mountPath: '/ssl'
            readOnly: true            
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
      volumes:
        - name: rnode-tls
          secret:
            secretName: rnode-tls              
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy: {}
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
          ports:
            - containerPort: 6379
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: paulmusso/dappy-nginx:13.9
          env:
            - name: DAPPY_NETWORK
              value: gammanetwork
          name: nginx
          volumeMounts:
            - mountPath: '/ssl'
              name: dappy-node-tls
              readOnly: true
          resources:
            limits:
              memory: '512Mi'
              cpu: '100m'
          ports:
            - containerPort: 80
            - containerPort: 443
      volumes:
        - name: dappy-node-tls
          secret:
            secretName: dappy-node-tls
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs
spec:
  type: ClusterIP
  selector:
    app: dappy-node
  ports:
    - port: 3001
      name: '3001'
      targetPort: 3001
    - port: 3002
      name: '3002'
      targetPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      name: 'redis'
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: LoadBalancer
  loadBalancerIP: 195.154.71.146
  selector:
    app: nginx
  externalTrafficPolicy: Local
  ports:
    - port: 80
      name: 'http'
      targetPort: 80
    - port: 443
      name: 'https'
      targetPort: 443
