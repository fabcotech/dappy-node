apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |
    .:53 {
        errors
        health {
            lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods verified
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
        }
        prometheus :9153
        forward . 1.1.1.1 1.1.1.2
        cache 30
        loop
        reload
        loadbalance
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: dappy-node-nginx-config
data:
  nginx.conf: |-
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=2r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    server {
      listen 80 default_server;
      location / {
        rewrite /(.*) /$1 break;

        proxy_pass http://localhost:3001;

        limit_req zone=req_limit_per_ip burst=10 nodelay;
        limit_conn conn_limit_per_ip 30;      
      }
    }

    server {
      listen 443 ssl http2;

      ssl_certificate /ssl/tls.crt;
      ssl_certificate_key /ssl/tls.key;

      include /etc/nginx/snippets/sslparams.conf;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;

      location / {
        rewrite /(.*) /$1 break;

        proxy_pass          http://localhost:3001;
        proxy_redirect      off;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;

        limit_req zone=req_limit_per_ip burst=10 nodelay;
        limit_conn conn_limit_per_ip 30;
      }
    }
  sslparams.conf: |-
    # from https://www.cyberciti.biz/faq/configure-nginx-to-use-only-tls-1-2-and-1-3/
    # and https://blog.microjoe.org/2017/configuration-https-qualite-nginx.html

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
    ssl_ecdh_curve secp384r1;

    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;

    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /ssl/dhparams.pem;

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dappy-jobs
spec:
  selector:
    matchLabels:
      app: dappy-jobs
  template:
    metadata:
      labels:
        app: dappy-jobs
    spec:
      containers:
        - image: paulmusso/dappy-node:3.7
          name: get-contract-logs
          env:
            - name: REDIS_URL
              value: redis://redis:6379/1
            - name: MASTER_REGISTRY_URI
              value: 1m9nenussy7udjznij1b6pr59jicg11aygmpit6fi9jji5i5633d3k
            - name: READ_ONLY
              value: https://c9e619b7-cacc-4441-b75a-363dfde1b0fa.pub.instances.scw.cloud
            - name: LOGS_INTERVAL
              value: '10000'
            - name: CONTRACTS
              value: dappynamesystem
            - name: READ_ONLY_CERTIFICATE_PATH
              value: /ssl/tls.crt
            - name: START_JOB
              value: 'true'
          resources:
            limits:
              memory: '128Mi'
              cpu: '100m'
          command:
          - sh
          - '-c'
          - node src/jobs/get-contract-logs.js
          volumeMounts:
          - name: rnode-tls 
            mountPath: '/ssl'
            readOnly: true   
      restartPolicy: Always
      volumes:
        - name: rnode-tls
          secret:
            secretName: rnode-tls      

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dappy-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dappy-node
  strategy: {}
  template:
    metadata:
      labels:
        app: dappy-node
    spec:
      containers:
        - image: nginx:1.21.3
          name: nginx
          volumeMounts:
          - name: dappy-node-tls
            mountPath: '/ssl'
          - name: dappy-node-nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: dappy-node-nginx-config
            mountPath: /etc/nginx/snippets/sslparams.conf
            subPath: sslparams.conf
          ports:
            - containerPort: 80
            - containerPort: 443
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
        - image: paulmusso/dappy-node:3.8
          name: dappy-node
          env:
            - name: CACHING
              value: '30'
            - name: CRON_JOBS_NAMES_MODULO
              value: '0'
            - name: HTTP_PORT
              value: '3001'
            - name: LAST_BLOCK_JOB_INTERVAL
              value: '40000'
            - name: RCHAIN_NAMES_CONTRACT_ID
              value: dappynamesystem
            - name: RCHAIN_NAMES_MASTER_REGISTRY_URI
              value: 1m9nenussy7udjznij1b6pr59jicg11aygmpit6fi9jji5i5633d3k
            - name: RCHAIN_NETWORK
              value: testbm210724
            - name: READ_ONLY
              value: https://aarnode
            - name: READ_ONLY_CERTIFICATE_PATH
              value: /ssl/tls.crt
            - name: REDIS_DB
              value: '1'
            - name: VALIDATOR
              value: https://node0.bm.testnet.rchain.coop
          ports:
            - containerPort: 3001
            - containerPort: 3002
          volumeMounts:
          - name: rnode-tls
            mountPath: '/ssl'
            readOnly: true            
          resources:
            limits:
              memory: '128Mi'
              cpu: '200m'
      volumes:
        - name: rnode-tls
          secret:
            secretName: rnode-tls
        - name: dappy-node-nginx-config
          configMap:
            name: dappy-node-nginx-config
        - name: dappy-node-tls
          secret:
            secretName: dappy-node-tls            
      restartPolicy: Always

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy: {}
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
          resources:
            limits:
              memory: '128Mi'
              cpu: '500m'
          ports:
            - containerPort: 6379
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - port: 6379
      name: 'redis'
      targetPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: lb-dappy-node
spec:
  type: LoadBalancer
  loadBalancerIP: 195.154.71.146
  selector:
    app: dappy-node
  externalTrafficPolicy: Local
  ports:
    - port: 80
      name: 'http'
      targetPort: 80
    - port: 443
      name: 'https'
      targetPort: 443
