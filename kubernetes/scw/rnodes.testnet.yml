apiVersion: v1
kind: ConfigMap
metadata:
  name: aarnode-nginx-config
data:
  nginx.conf: |-
    server {
      listen 443 ssl;

      ssl_certificate /ssl/rnode.crt;
      ssl_certificate_key /ssl/rnode.key;

      location / {
        rewrite /(.*) /$1 break;
        proxy_pass          http://localhost:40403;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
      }
    }

---

apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: aarnode
spec:
  serviceName: aarnode
  selector:
    matchLabels:
      app: aarnode
  template:
    metadata:
      labels:
        app: aarnode
    spec:
      nodeSelector:
        rnode: 'true'
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - aarnode
              topologyKey: "kubernetes.io/hostname"
            weight: 1
      initContainers:
        - name: get-public-domain-on-scw
          image: busybox:1.33.1
          volumeMounts: 
            - name: config
              mountPath: /var/lib/config
          command:
            - sh
            - '-c'
            - |
              wget -qO- http://169.254.42.42/conf?format=json | \
                awk -F '[:,]' '/"id"/ {gsub("[[:blank:]\"]+", "", $2); print $2}' | \
                tr -d '\n' \
                > /var/lib/config/public-domain
              echo '.pub.instances.scw.cloud' >> /var/lib/config/public-domain

      containers:
        - image: nginx:1.21.3
          name: nginx
          volumeMounts:
          - name: sslsecret
            mountPath: '/ssl'
            readOnly: true
          - name: aarnode-nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          ports:
            - containerPort: 443
              hostPort: 443
          resources:
            limits:
              memory: 500Mi
        - image: rchain/rnode:v0.12.2-rc1
          name: aarnode
          env:
            - name: BOOTSTRAP
              value: 'rnode://a383f7404d045e3e3fa4f5ebb200c92fb3fc8e18@node0.bm.testnet.rchain.coop?protocol=40400&discovery=40404'
            - name: RCHAIN_NETWORK
              value: 'testbm210724'
            - name: SHARD_NAME
              value: 'testbm'
          volumeMounts:
            - name: sslsecret
              mountPath: '/ssl'
              readOnly: true
            - name: config
              mountPath: /var/lib/config
            - name: csi-vol-scw
              mountPath: /root/.rnode
          command:
            - sh
            - "-c" 
            - |
              /opt/docker/bin/rnode run \
                  --bootstrap $BOOTSTRAP \
                  --network-id $RCHAIN_NETWORK \
                  --shard-name $SHARD_NAME \
                  --host `cat /var/lib/config/public-domain` \
                  --protocol-port '40400' \
                  --discovery-port '40404' \
                  --api-port-grpc-external '40401' \
                  --api-port-http '40403' \
                  --finalization-rate '1' \
                  --fault-tolerance-threshold '-1' \
                  --synchrony-constraint-threshold '0.99' \
                  --fork-choice-stale-threshold '60 minutes'
          ports:
            - containerPort: 40400
              hostPort: 40400
            - containerPort: 40401
              hostPort: 40401
            - containerPort: 40403
              hostPort: 40403
            - containerPort: 40404
              hostPort: 40404
          resources:
            requests:
              memory: 5Gi
              cpu: 1400m
      
      volumes:
        - name: sslsecret
          secret:
            secretName: sslsecret
        - emptyDir: {}
          name: config
        - name: aarnode-nginx-config
          configMap:
            name: aarnode-nginx-config
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: csi-vol-scw
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: scw-bssd
      resources:
        requests:
          storage: 50Gi
---

apiVersion: v1
kind: Service
metadata:
  name: scw-metadata
spec:
  type: ExternalName
  externalName: 169.254.42.42
  ports:
  - name: http
    port: 80
    targetPort: 80