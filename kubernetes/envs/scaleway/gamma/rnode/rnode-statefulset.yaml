apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: rnode
spec:
  serviceName: rnode
  selector:
    matchLabels:
      app: rnode
  template:
    metadata:
      labels:
        app: rnode
    spec:
      nodeSelector:
        rnode: 'true'
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - rnode
              topologyKey: "kubernetes.io/hostname"
            weight: 1
      initContainers:
        - name: get-public-domain-on-scw
          image: busybox:1.33.1
          volumeMounts: 
            - name: config
              mountPath: /var/lib/config
          command:
            - sh
            - '-c'
            - |
              wget -qO- http://169.254.42.42/conf?format=json | \
                awk -F '[:,]' '/"id"/ {gsub("[[:blank:]\"]+", "", $2); print $2}' | \
                tr -d '\n' \
                > /var/lib/config/public-domain
              echo '.pub.instances.scw.cloud' >> /var/lib/config/public-domain

      containers:
        - image: nginx:1.21.3
          name: nginx
          volumeMounts:
          - name: rnode-tls
            mountPath: '/ssl'
            readOnly: true
          - name: rnode-nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          ports:
            - containerPort: 443
              hostPort: 443
          resources:
            limits:
              memory: 500Mi
        - image: rchain/rnode:v0.13.0-alpha
          name: rnode
          env:
            - name: DAPPY_RCHAIN_BOOTSTRAP
              value: rnode://8c7b1834f78f11e640ce58a899f0c1dc7605d712@node0.testnet.rchain.coop?protocol=40400&discovery=40404
            - name: DAPPY_RCHAIN_NETWORK
              value: testnet220309
            - name: DAPPY_RCHAIN_SHARD_NAME
              value: testnet4
          volumeMounts:
            - name: rnode-tls 
              mountPath: /ssl
              readOnly: true
            - name: config
              mountPath: /var/lib/config
            - name: csi-vol-scw
              mountPath: /root/.rnode
          command:
            - sh
            - "-c" 
            - |
              /opt/docker/bin/rnode run \
                  --bootstrap $DAPPY_RCHAIN_BOOTSTRAP \
                  --network-id $DAPPY_RCHAIN_NETWORK \
                  --shard-name $DAPPY_RCHAIN_SHARD_NAME \
                  --host `cat /var/lib/config/public-domain` \
                  --protocol-port '40400' \
                  --discovery-port '40404' \
                  --api-port-grpc-external '40401' \
                  --api-port-http '40403' \
                  --finalization-rate '1' \
                  --max-number-of-parents '1' \
                  --fault-tolerance-threshold '-1' \
                  --synchrony-constraint-threshold '0.99' \
                  --fork-choice-stale-threshold '60 minutes'
          ports:
            - containerPort: 40400
              hostPort: 40400
            - containerPort: 40401
              hostPort: 40401
            - containerPort: 40403
              hostPort: 40403
            - containerPort: 40404
              hostPort: 40404
          resources:
            requests:
              memory: 5Gi
              cpu: 1400m
      
      volumes:
        - name: rnode-tls 
          secret:
            secretName: rnode-tls 
        - emptyDir: {}
          name: config
        - name: rnode-nginx-config
          configMap:
            name: rnode-nginx-config
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: csi-vol-scw
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: scw-bssd
      resources:
        requests:
          storage: 150Gi